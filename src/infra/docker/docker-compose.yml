version: '3.8'

services:
  app:
    container_name: app
    build:
      context: ../../../
      dockerfile: src/infra/docker/Dockerfile
    volumes:
      - ../../.././:/app/
    ports:
      - 3000:3000
    networks:
      - application-bridge
    depends_on:
      - mongodb
      - kafka
  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234  
    networks:
      - application-bridge
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - application-bridge
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - application-bridge
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports: 
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    networks:
      - application-bridge  
networks:
  application-bridge:
    driver: bridge
